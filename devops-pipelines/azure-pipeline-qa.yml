# This is a basic Azure DevOps pipeline to validate Terraform

name: ' Validate Terraform code: '

variables:
  - group: 'terraform-unity-catalog-qa'

# We disable builds for any commits as everything should go through pull requests
trigger: none

# the PR trigger is configured at the main branch of the repo as a branch policy (Build Validation)

pool:
  vmImage: 'ubuntu-latest'

steps:

  - checkout: self

  - script: |
      eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
      brew tap hashicorp/tap
      brew install hashicorp/tap/terraform
    displayName: 'Install Terraform'

  - task: AzureCLI@2
    displayName: 'Extract information from Azure CLI'
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      azureSubscription: $(SERVICE_CONNECTION_NAME)
      addSpnToEnvironment: true
      inlineScript: |
        subscription_id=$(az account list --query "[?isDefault].id"|jq -r '.[0]')
        echo "##vso[task.setvariable variable=ARM_CLIENT_ID]${servicePrincipalId}"
        echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]${servicePrincipalKey}"
        echo "##vso[task.setvariable variable=ARM_TENANT_ID]${tenantId}"
        echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]${subscription_id}"

  - script: |
      terraform fmt -check
    displayName: 'Check formatting of Terraform code'
    workingDirectory: qa/
    enabled: 'true'

  - script: |
      terraform init -input=false -no-color \
        -backend-config="subscription_id=$BACKEND_SUBSCRIPTION_ID" \
        -backend-config="resource_group_name=$BACKEND_RG_NAME" \
        -backend-config="storage_account_name=$BACKEND_SA_NAME" \
        -backend-config="container_name=$BACKEND_CONTAINER_NAME" \
        -backend-config="key=$BACKEND_KEY"
    displayName: 'Terraform init'
    workingDirectory: qa/
    enabled: 'true'
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)

  - script: |
      terraform validate -no-color
    displayName: 'Terraform validate'
    workingDirectory: qa/
    enabled: 'true'

  - script: |
      terraform plan -lock=false -input=false -no-color
    displayName: 'Terraform plan'
    name: 'plan'
    workingDirectory: qa/
    enabled: 'true'
    env:
      ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)